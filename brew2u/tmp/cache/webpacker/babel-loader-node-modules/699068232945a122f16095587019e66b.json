{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/environment/brew2u/brew2u/app/javascript/components/NewReview.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, Redirect } from 'react-router-dom';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { emptySymbol, fullSymbol, Rating } from 'react-rating';\n\nvar NewReview =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewReview, _React$Component);\n\n  function NewReview(props) {\n    var _this;\n\n    _classCallCheck(this, NewReview);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewReview).call(this, props));\n\n    _this.handleChange = function (event) {\n      var attributes = _this.state.attributes;\n      attributes[event.target.name] = event.target.value;\n\n      _this.setState({\n        attributes: attributes\n      });\n    };\n\n    _this.handleNewReview = function () {\n      var success = _this.state.success;\n      var handleNewReview = _this.props.handleNewReview;\n      handleNewReview(_this.state.attributes);\n      var redirect = success === false ? true : false;\n\n      _this.setState({\n        success: redirect\n      });\n    };\n\n    _this.state = {\n      attributes: {\n        review: '',\n        rating: ''\n      },\n      success: false\n    };\n    return _this;\n  }\n\n  _createClass(NewReview, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          success = _this$state.success,\n          attributes = _this$state.attributes;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Write a Review\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Label, {\n        \"for\": \"review\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Review\"), React.createElement(Input, {\n        type: \"textarea\",\n        rows: \"5\",\n        cols: \"50\",\n        placeholder: \"Your review helps others learn about local coffee shops or microbreweries.\",\n        name: \"review\",\n        onChange: this.handleChange,\n        value: attributes.review,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Label, {\n        \"for\": \"rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"On a scale of 1 = Worst to 5 = Best, please select your overall rating\"), React.createElement(Input, {\n        type: \"select\",\n        min: \"1\",\n        max: \"5\",\n        placeholderrating: \"1=Worst / 5=Best\",\n        name: \"rating\",\n        onChange: this.handleChange,\n        value: attributes.rating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"3\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"4\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"5\"))), React.createElement(Button, {\n        onClick: this.handleNewReview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Post Review\"), success && React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NewReview;\n}(React.Component);\n\nexport default NewReview;","map":{"version":3,"sources":["/home/ubuntu/environment/brew2u/brew2u/app/javascript/components/NewReview.js"],"names":["React","PropTypes","Link","Redirect","Button","Form","FormGroup","Label","Input","FormText","emptySymbol","fullSymbol","Rating","NewReview","props","handleChange","event","attributes","state","target","name","value","setState","handleNewReview","success","redirect","review","rating","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { \n  Link,\n  Redirect\n} from 'react-router-dom'\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { emptySymbol, fullSymbol, Rating } from 'react-rating';\n\nclass NewReview extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      attributes: {\n        review: '',\n        rating: '',\n      },\n      success: false\n    }\n  }\n  \n  handleChange = (event)=>{\n    const { attributes } = this.state  \n    attributes[event.target.name] = event.target.value\n    this.setState({ attributes })\n  }\n  \n  handleNewReview = () => {\n    const { success } = this.state\n    const { handleNewReview } = this.props\n    handleNewReview(this.state.attributes)\n    let redirect = success === false ? true : false\n    this.setState({ success: redirect })\n  }\n  \n  render () {\n    const{ success, attributes } = this.state\n    return (\n      <React.Fragment>\n        <h1>Write a Review</h1>\n        <FormGroup>\n          <Label for=\"review\">Review</Label>\n          <Input \n            type=\"textarea\" rows=\"5\" cols=\"50\" \n            placeholder=\"Your review helps others learn about local coffee shops or microbreweries.\"\n            name=\"review\"\n            onChange={this.handleChange}\n            value = {attributes.review}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"rating\">On a scale of 1 = Worst to 5 = Best, please select your overall rating</Label>\n            <Input\n              type=\"select\"\n              min=\"1\"\n              max=\"5\"\n              placeholderrating=\"1=Worst / 5=Best\"\n              name=\"rating\"\n              onChange={this.handleChange}\n              value = {attributes.rating}\n            >\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </Input>\n        </FormGroup>\n\n        <Button onClick={this.handleNewReview}>Post Review</Button>\n\n        {success &&\n          <Redirect to=\"/\" />\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NewReview\n"]},"metadata":{},"sourceType":"module"}