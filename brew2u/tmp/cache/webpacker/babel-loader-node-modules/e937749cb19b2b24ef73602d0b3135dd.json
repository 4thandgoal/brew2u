{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/environment/brew2u/brew2u/app/javascript/components/MapContainer.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\n\nvar MapContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MapContainer, _React$Component);\n\n  function MapContainer(_props) {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).call(this, _props));\n\n    _this.onMarkerClick = function (props, marker, e) {\n      return _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onMapClicked = function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    _this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"render\",\n    value: function render() {\n      var mapStyles = {\n        width: \"50%\",\n        height: \"50%\"\n      };\n      var _this$props = this.props,\n          google = _this$props.google,\n          name = _this$props.name,\n          latitude = _this$props.latitude,\n          longitude = _this$props.longitude,\n          rating = _this$props.rating;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Map, {\n        className: \"googleMap\",\n        google: google,\n        style: mapStyles,\n        initialCenter: {\n          lat: latitude,\n          lng: longitude\n        },\n        zoom: 15,\n        onClick: this.onMapClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: name,\n        rating: \"Average rating: \".concat(rating),\n        title: name,\n        position: {\n          lat: latitude,\n          lng: longitude\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        maxWidth: \"180\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.selectedPlace.name), React.createElement(\"h7\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.selectedPlace.rating)))));\n    }\n  }]);\n\n  return MapContainer;\n}(React.Component);\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDSkERfUbqV1nPReiTvz2thgnd1cEgA_sk\"\n})(MapContainer);","map":{"version":3,"sources":["/home/ubuntu/environment/brew2u/brew2u/app/javascript/components/MapContainer.js"],"names":["React","PropTypes","Map","InfoWindow","Marker","GoogleApiWrapper","MapContainer","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onMapClicked","state","mapStyles","width","height","google","name","latitude","longitude","rating","lat","lng","Component","apiKey"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react'\n\nclass MapContainer extends React.Component {\n   constructor(props){\n    super(props)\n     this.state = {\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {},\n      };\n   }\n   onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      })\n    }\n  }\n   \n   \n   \n  render () {\n    const mapStyles = {\n      width: \"50%\",\n      height: \"50%\",\n    }\n      \n\n    const { google, name, latitude, longitude, rating } = this.props\n    \n    return (\n      <React.Fragment>\n        <Map className=\"googleMap\"\n          google={google}\n          style={mapStyles}\n          initialCenter={{\n            lat: latitude,\n            lng: longitude\n          }}\n          zoom={15}\n          onClick={this.onMapClicked}\n        >\n          <Marker onClick={this.onMarkerClick}\n\n            name= {name}\n            rating= {`Average rating: ${rating}`}\n            title={name}\n            position = {{lat: latitude, lng: longitude}}\n          />\n        \n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            maxWidth=\"180\"\n          >\n            <div>\n              <h5>{this.state.selectedPlace.name}</h5>\n              <h7>{this.state.selectedPlace.rating}</h7>\n            </div>\n          </InfoWindow>\n        </Map>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDSkERfUbqV1nPReiTvz2thgnd1cEgA_sk\"\n})(MapContainer)\n"]},"metadata":{},"sourceType":"module"}