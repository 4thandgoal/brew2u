{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/environment/brew2u/app/javascript/components/tests/App.test.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Landing from './Landing';\nimport Enzyme, { mount } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport App from './App';\nimport Routes from './Routes';\nEnzyme.configure({\n  adapter: new Adapter()\n}); // is there a reference to intro on the Landing.js file?\n\nit('should display an introduction message', function () {\n  var landing = mount(React.createElement(Landing, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n  expect(landing.find('#intro').text()).toMatch(/\\w/i);\n}); // changed /App to /Landing since Brew2U is on the Landing.js component\n\nit('gives a message of title page name', function () {\n  var app = mount(React.createElement(Landing, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n  expect(app.find('h2').text()).toEqual('Brew2U');\n});\nit('gives text of navbar', function () {\n  var app = mount(React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n  expect(app.find('h1').text()).toEqual('navbar');\n});\nit('Landing renders without crashing', function () {\n  var div = document.createElement('div');\n  ReactDOM.render(React.createElement(Landing, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), div);\n}); // it(\"renders an image\", () => {\n//         const logo = shallow(<Logo />);\n//         expect(logo.find(\"img\").prop(\"src\")).toEqual(logoImage);\n// });\n\nit(\"becomes active when the button is clicked\", function () {\n  var wrapper = shallow(React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n  wrapper.find(\".open-menu-button-class\").simulate(\"click\");\n  expect(wrapper.state(\"active\")).toBeTruthy();\n});\nit(\"renders options when active\", function () {\n  var wrapper = shallow(React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n  wrapper.setState({\n    active: true\n  });\n  expect(wrapper.find(\".option\").length).toBe(2);\n});","map":{"version":3,"sources":["/home/ubuntu/environment/brew2u/app/javascript/components/tests/App.test.js"],"names":["React","ReactDOM","Landing","Enzyme","mount","Adapter","App","Routes","configure","adapter","it","landing","expect","find","text","toMatch","app","toEqual","div","document","createElement","render","wrapper","shallow","simulate","state","toBeTruthy","setState","active","length","toBe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,IAAiBC,KAAjB,QAA8B,QAA9B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEAJ,MAAM,CAACK,SAAP,CAAiB;AAAEC,EAAAA,OAAO,EAAE,IAAIJ,OAAJ;AAAX,CAAjB,E,CACA;;AACAK,EAAE,CAAC,wCAAD,EAA2C,YAAM;AAC/C,MAAMC,OAAO,GAAGP,KAAK,CAAC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAD,CAArB;AACAQ,EAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAa,QAAb,EAAuBC,IAAvB,EAAD,CAAN,CAAsCC,OAAtC,CAA8C,KAA9C;AACH,CAHC,CAAF,C,CAIA;;AACAL,EAAE,CAAC,oCAAD,EAAuC,YAAI;AAC3C,MAAMM,GAAG,GAAGZ,KAAK,CAAC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAD,CAAjB;AACAQ,EAAAA,MAAM,CAACI,GAAG,CAACH,IAAJ,CAAS,IAAT,EAAeC,IAAf,EAAD,CAAN,CAA8BG,OAA9B,CAAsC,QAAtC;AACD,CAHC,CAAF;AAKAP,EAAE,CAAC,sBAAD,EAAyB,YAAI;AAC7B,MAAMM,GAAG,GAAGZ,KAAK,CAAC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAD,CAAjB;AACAQ,EAAAA,MAAM,CAACI,GAAG,CAACH,IAAJ,CAAS,IAAT,EAAeC,IAAf,EAAD,CAAN,CAA8BG,OAA9B,CAAsC,QAAtC;AACD,CAHC,CAAF;AAKAP,EAAE,CAAC,kCAAD,EAAqC,YAAM;AAC3C,MAAMQ,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACAnB,EAAAA,QAAQ,CAACoB,MAAT,CAAgB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAA6BH,GAA7B;AACD,CAHC,CAAF,C,CAIA;AACA;AACA;AACA;;AACCR,EAAE,CAAC,2CAAD,EAA8C,YAAM;AACrD,MAAMY,OAAO,GAAGC,OAAO,CAAC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAD,CAAvB;AACAD,EAAAA,OAAO,CAACT,IAAR,CAAa,yBAAb,EAAwCW,QAAxC,CAAiD,OAAjD;AACAZ,EAAAA,MAAM,CAACU,OAAO,CAACG,KAAR,CAAc,QAAd,CAAD,CAAN,CAAgCC,UAAhC;AACD,CAJE,CAAF;AAMAhB,EAAE,CAAC,6BAAD,EAAgC,YAAM;AACvC,MAAMY,OAAO,GAAGC,OAAO,CAAC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAD,CAAvB;AACAD,EAAAA,OAAO,CAACK,QAAR,CAAiB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAjB;AACAhB,EAAAA,MAAM,CAACU,OAAO,CAACT,IAAR,CAAa,SAAb,EAAwBgB,MAAzB,CAAN,CAAuCC,IAAvC,CAA4C,CAA5C;AACD,CAJE,CAAF","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Landing from './Landing'\nimport Enzyme, { mount } from 'enzyme'\nimport Adapter from 'enzyme-adapter-react-16'\nimport App from './App'\nimport Routes from './Routes'\n\nEnzyme.configure({ adapter: new Adapter() })\n// is there a reference to intro on the Landing.js file?\nit('should display an introduction message', () => {\n    const landing = mount(<Landing />)\n    expect(landing.find('#intro').text()).toMatch(/\\w/i)\n})\n// changed /App to /Landing since Brew2U is on the Landing.js component\nit('gives a message of title page name', ()=>{\n  const app = mount(<Landing />)\n  expect(app.find('h2').text()).toEqual('Brew2U')\n})\n \nit('gives text of navbar', ()=>{\n  const app = mount(<Routes />)\n  expect(app.find('h1').text()).toEqual('navbar')\n})\n \nit('Landing renders without crashing', () => {\n  const div = document.createElement('div')\n  ReactDOM.render(<Landing />, div)\n})\n// it(\"renders an image\", () => {\n//         const logo = shallow(<Logo />);\n//         expect(logo.find(\"img\").prop(\"src\")).toEqual(logoImage);\n// });\n it(\"becomes active when the button is clicked\", () => {\n  const wrapper = shallow(<Routes />);\n  wrapper.find(\".open-menu-button-class\").simulate(\"click\");\n  expect(wrapper.state(\"active\")).toBeTruthy();\n})\n \n it(\"renders options when active\", () => {\n  const wrapper = shallow(<Routes />);\n  wrapper.setState({ active: true });\n  expect(wrapper.find(\".option\").length).toBe(2);\n})"]},"metadata":{},"sourceType":"module"}